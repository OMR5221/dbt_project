{"results": [{"node": {"raw_sql": "select \n\tnpi as npi,\n\tentity_type_code as entity_type_code,\n\torganization_name as organization_name,\n\tlast_name as last_name,\n\tfirst_name as first_name,\n\tstate as state_abbreviation,\n\ttaxonomy_code as taxonomy_code\n  from {{ source('source', 'npi_small') }}", "database": "airflow", "schema": "public", "fqn": ["airflow_dbt_pg", "ge_tutorials", "staging", "stg_npi"], "unique_id": "model.airflow_dbt_pg.stg_npi", "package_name": "airflow_dbt_pg", "root_path": "/usr/local/airflow/dbt", "path": "ge_tutorials/staging/stg_npi.sql", "original_file_path": "models/ge_tutorials/staging/stg_npi.sql", "name": "stg_npi", "resource_type": "model", "alias": "stg_npi", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": []}, "tags": [], "refs": [], "sources": [["source", "npi_small"]], "depends_on": {"macros": [], "nodes": ["source.airflow_dbt_pg.source.npi_small"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/airflow_dbt_pg/ge_tutorials/staging/stg_npi.sql", "compiled": true, "compiled_sql": "select \n\tnpi as npi,\n\tentity_type_code as entity_type_code,\n\torganization_name as organization_name,\n\tlast_name as last_name,\n\tfirst_name as first_name,\n\tstate as state_abbreviation,\n\ttaxonomy_code as taxonomy_code\n  from \"airflow\".\"public\".\"npi_small\"", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "select \n\tnpi as npi,\n\tentity_type_code as entity_type_code,\n\torganization_name as organization_name,\n\tlast_name as last_name,\n\tfirst_name as first_name,\n\tstate as state_abbreviation,\n\ttaxonomy_code as taxonomy_code\n  from \"airflow\".\"public\".\"npi_small\"", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.023286104202270508, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-11-01T00:59:53.149697Z", "completed_at": "2020-11-01T00:59:53.171828Z"}, {"name": "execute", "started_at": "2020-11-01T00:59:53.172119Z", "completed_at": "2020-11-01T00:59:53.172131Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "select \n\tname as state_name,\n\tabbreviation as state_abbreviation\n  from {{ source('source', 'state_abbreviations') }}", "database": "airflow", "schema": "public", "fqn": ["airflow_dbt_pg", "ge_tutorials", "staging", "stg_state_abbreviations"], "unique_id": "model.airflow_dbt_pg.stg_state_abbreviations", "package_name": "airflow_dbt_pg", "root_path": "/usr/local/airflow/dbt", "path": "ge_tutorials/staging/stg_state_abbreviations.sql", "original_file_path": "models/ge_tutorials/staging/stg_state_abbreviations.sql", "name": "stg_state_abbreviations", "resource_type": "model", "alias": "stg_state_abbreviations", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": []}, "tags": [], "refs": [], "sources": [["source", "state_abbreviations"]], "depends_on": {"macros": [], "nodes": ["source.airflow_dbt_pg.source.state_abbreviations"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/airflow_dbt_pg/ge_tutorials/staging/stg_state_abbreviations.sql", "compiled": true, "compiled_sql": "select \n\tname as state_name,\n\tabbreviation as state_abbreviation\n  from \"airflow\".\"public\".\"state_abbreviations\"", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "select \n\tname as state_name,\n\tabbreviation as state_abbreviation\n  from \"airflow\".\"public\".\"state_abbreviations\"", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.010033130645751953, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-11-01T00:59:53.173139Z", "completed_at": "2020-11-01T00:59:53.182211Z"}, {"name": "execute", "started_at": "2020-11-01T00:59:53.182470Z", "completed_at": "2020-11-01T00:59:53.182474Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "select \n\tn.npi,\n\tn.entity_type_code,\n\tn.organization_name,\n\tn.last_name,\n\tn.first_name,\n\tn.taxonomy_code,\n\tn.state_abbreviation,\n\ts.state_name\nfrom {{ ref('stg_npi') }} n\n-- due to the nature of the data some state abbreviations are not valid\n-- which results in state names being null  - in this case,\n-- switch to inner join\ninner join {{ ref('stg_state_abbreviations') }} s\n\ton n.state_abbreviation = s.state_abbreviation", "database": "airflow", "schema": "public", "fqn": ["airflow_dbt_pg", "ge_tutorials", "npi_with_state"], "unique_id": "model.airflow_dbt_pg.npi_with_state", "package_name": "airflow_dbt_pg", "root_path": "/usr/local/airflow/dbt", "path": "ge_tutorials/npi_with_state.sql", "original_file_path": "models/ge_tutorials/npi_with_state.sql", "name": "npi_with_state", "resource_type": "model", "alias": "npi_with_state", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": []}, "tags": [], "refs": [["stg_npi"], ["stg_state_abbreviations"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.airflow_dbt_pg.stg_npi", "model.airflow_dbt_pg.stg_state_abbreviations"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/airflow_dbt_pg/ge_tutorials/npi_with_state.sql", "compiled": true, "compiled_sql": "select \n\tn.npi,\n\tn.entity_type_code,\n\tn.organization_name,\n\tn.last_name,\n\tn.first_name,\n\tn.taxonomy_code,\n\tn.state_abbreviation,\n\ts.state_name\nfrom \"airflow\".\"public\".\"stg_npi\" n\n-- due to the nature of the data some state abbreviations are not valid\n-- which results in state names being null  - in this case,\n-- switch to inner join\ninner join \"airflow\".\"public\".\"stg_state_abbreviations\" s\n\ton n.state_abbreviation = s.state_abbreviation", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "select \n\tn.npi,\n\tn.entity_type_code,\n\tn.organization_name,\n\tn.last_name,\n\tn.first_name,\n\tn.taxonomy_code,\n\tn.state_abbreviation,\n\ts.state_name\nfrom \"airflow\".\"public\".\"stg_npi\" n\n-- due to the nature of the data some state abbreviations are not valid\n-- which results in state names being null  - in this case,\n-- switch to inner join\ninner join \"airflow\".\"public\".\"stg_state_abbreviations\" s\n\ton n.state_abbreviation = s.state_abbreviation", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.010418176651000977, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-11-01T00:59:53.183711Z", "completed_at": "2020-11-01T00:59:53.193199Z"}, {"name": "execute", "started_at": "2020-11-01T00:59:53.193448Z", "completed_at": "2020-11-01T00:59:53.193453Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "select \n\tstate_name,\n\tcount(distinct npi) as count_providers\nfrom {{ ref('npi_with_state') }} n\ngroup by state_name", "database": "airflow", "schema": "public", "fqn": ["airflow_dbt_pg", "ge_tutorials", "count_providers_by_state"], "unique_id": "model.airflow_dbt_pg.count_providers_by_state", "package_name": "airflow_dbt_pg", "root_path": "/usr/local/airflow/dbt", "path": "ge_tutorials/count_providers_by_state.sql", "original_file_path": "models/ge_tutorials/count_providers_by_state.sql", "name": "count_providers_by_state", "resource_type": "model", "alias": "count_providers_by_state", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": []}, "tags": [], "refs": [["npi_with_state"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.airflow_dbt_pg.npi_with_state"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/airflow_dbt_pg/ge_tutorials/count_providers_by_state.sql", "compiled": true, "compiled_sql": "select \n\tstate_name,\n\tcount(distinct npi) as count_providers\nfrom \"airflow\".\"public\".\"npi_with_state\" n\ngroup by state_name", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "select \n\tstate_name,\n\tcount(distinct npi) as count_providers\nfrom \"airflow\".\"public\".\"npi_with_state\" n\ngroup by state_name", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.008682966232299805, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-11-01T00:59:53.194639Z", "completed_at": "2020-11-01T00:59:53.202414Z"}, {"name": "execute", "started_at": "2020-11-01T00:59:53.202656Z", "completed_at": "2020-11-01T00:59:53.202660Z"}], "fail": null, "warn": null, "skip": false}], "generated_at": "2020-11-01T00:59:53.250274Z", "elapsed_time": 0.10742497444152832}